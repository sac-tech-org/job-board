openapi: 3.0.3

info:
  title: Sac Tech Job Board API
  version: 0.1.0
  description: OpenAPI specification for the Sac Tech Job Board API.
  contact:
    name: Robert Usher
    url: https://github.com/sac-tech-org/job-board
    email: robert@procyoninnovations.com

servers:
  - url: http://localhost:8080
    description: Local server

tags:
  - name: Health Check
  - name: User

paths:
  /health:
    get:
      description: Health check endpoint
      responses:
        "200":
          description: "Service is healthy"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheck"
      tags:
        - Health Check

  /user:
    get:
      operationId: getUserList
      description: Get list of users
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserObject"
          description: GET User list response
      tags:
        - User

  /user/me:
    get:
      operationId: getCurrentUser
      description: Get current user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserObject"
          description: GET User object response
      tags:
        - User

  /user/{username}:
    parameters:
      - $ref: "#/components/parameters/usernamePath"
    delete:
      operationId: deleteUserByID
      description: Delete user by ID
      responses:
        "204":
          description: "User succussfully deleted"
      tags:
        - User
    get:
      operationId: getUserByUsername
      description: Get user by Username
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserObject"
          description: GET User object response
      tags:
        - User
    put:
      operationId: putUserByID
      description: Update user by ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdatePayload"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserObject"
          description: PUT User object response
      tags:
        - User

components:
  parameters:
    usernamePath:
      description: Username
      in: path
      name: username
      required: true
      schema:
        type: string

  schemas:
    EmailObject:
      type: object
      properties:
        address:
          type: string
          format: email
        verified:
          type: boolean
    HealthCheck:
      type: object
      properties:
        status:
          type: string
          enum:
            - ok
    UserObject:
      type: object
      properties:
        email:
          $ref: "#/components/schemas/EmailObject"
        id:
          type: string
          format: uuid
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
          maxLength: 24
    UserUpdatePayload:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
          maxLength: 24
